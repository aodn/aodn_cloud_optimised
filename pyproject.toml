[build-system]
requires = ["poetry-core>1.0.0", "wheel"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "aodn-cloud-optimised"
version = "0.1.9"
description = "Cloud optimised data formats for IMOS NetCDF files and CSVs."
authors = ["lbesnard <laurent.besnard@utas.edu.au>"]
license = "GNU General Public License v3.0"
readme = "README.md"
keywords = ["cloud", "data", "NetCDF", "CSV", "Zarr", "Parquet"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]


[tool.poetry.urls]
"Source code" = "https://github.com/aodn/aodn_cloud_optimised"


[tool.poetry.dependencies]
python = ">=3.10.14, <4.0"
netCDF4 = "==1.6.5"  # hardpinned because of bug https://github.com/Unidata/netcdf4-python/issues/1342
numpy = "<2.0.0"
pandas = ">=2.2.2"
python-dateutil = ">=2.9.0"
jsonschema = ">=4.22.0"
h5py = ">=3.11.0"
h5netcdf = "==1.3.0"
scipy = ">=1.13.0"
boto3 = ">=1.34.100"
pyarrow = "==16.0.0"
rechunker = ">=0.5.2"
s3fs = ">=2024.3.1"
shapely = ">=2.0.4"
xarray = { version = ">=2024.3.0", extras = ["complete"] }
zarr = ">=2.18.2"
geopandas = ">=0.14.4"
coiled = ">=1.27.2"
dask = ">=2024.6.0"

[tool.poetry.dev-dependencies]
pytest = "^8.2.1"
ipdb = "^0.13"
ipython = "^7.5.3"
coverage = "^7.5.3"
pre-commit = "^3.7.1"
moto = {version = ">=5.0.0", extras = ["ec2", "s3",  "server", "all"]}  # Add Moto with optional dependencies
fuzzywuzzy = ">=0.18.0"
sphinx = ">=7.3.7"
poetry-pre-commit-plugin = "^0.1.2"


#[tool.poetry.extras]
#testing = ["pytest", "ipython", "ipdb"]
#interactive = ["pytest", "ipython", "ipdb"]


[tool.poetry.scripts]
#anmn_aqualogger_to_parquet = "aodn_cloud_optimised.bin.anmn_aqualogger_to_parquet:main"
#anmn_ctd_timeseries = "aodn_cloud_optimised.bin.anmn_ctd_timeseries:main"
cloud_optimised_argo = "aodn_cloud_optimised.bin.argo:main"
cloud_optimised_create_aws_registry_dataset = "aodn_cloud_optimised.bin.create_aws_registry_dataset:main"
cloud_optimised_model_sea_level_anomaly_gridded_realtime = "aodn_cloud_optimised.bin.model_sea_level_anomaly_gridded_realtime:main"
cloud_optimised_mooring_hourly_timeseries_delayed_qc = "aodn_cloud_optimised.bin.mooring_hourly_timeseries_delayed_qc:main"
cloud_optimised_radar_TurquoiseCoast_velocity_hourly_average_delayed_qc = "aodn_cloud_optimised.bin.radar_TurquoiseCoast_velocity_hourly_average_delayed_qc:main"
cloud_optimised_receiver_animal_acoustic_tagging_delayed_qc = "aodn_cloud_optimised.bin.receiver_animal_acoustic_tagging_delayed_qc:main"
cloud_optimised_satellite_ghrsst_l3s_1day_daynighttime_single_sensor_australia = "aodn_cloud_optimised.bin.satellite_ghrsst_l3s_1day_daynighttime_single_sensor_australia:main"
cloud_optimised_satellite_ghrsst_l3s_3day_daynighttime_single_sensor_australia = "aodn_cloud_optimised.bin.satellite_ghrsst_l3s_3day_daynighttime_single_sensor_australia:main"
cloud_optimised_slocum_glider_delayed_qc = "aodn_cloud_optimised.bin.slocum_glider_delayed_qc:main"
#cloud_optimised_srs_oc_ljco_to_parquet = "aodn_cloud_optimised.bin.srs_oc_ljco_to_parquet:main"
cloud_optimised_vessel_xbt_realtime_nonqc = "aodn_cloud_optimised.bin.vessel_xbt_realtime_nonqc:main"
cloud_optimised_wave_buoy_realtime_nonqc = "aodn_cloud_optimised.bin.wave_buoy_realtime_nonqc:main"
generic_cloud_optimised_creation = "aodn_cloud_optimised.bin.generic_cloud_optimised_creation:main"

#[tool.poetry.include]
#data = ["aodn_cloud_optimised/config/*.json", "aodn_cloud_optimised/config/dataset/*.json"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.1"
ipdb = "^0.13"
ipython = "^7.5.3"
coverage = "^7.5.3"
pre-commit = "^3.7.1"
moto = {version = ">=5.0.0", extras = ["ec2", "s3",  "server", "all"]}  # Add Moto with optional dependencies
fuzzywuzzy = ">=0.18.0"
sphinx = ">=7.3.7"
poetry-pre-commit-plugin = "^0.1.2"


[tool.pre_commit]
version = "2.3.0"
config = ".pre-commit-config.yaml"

[tool.pytest.ini_options]
# Other pytest settings can go here
addopts = "--ignore=integration_testing"
